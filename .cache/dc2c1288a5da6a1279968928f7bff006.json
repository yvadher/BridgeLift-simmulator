{"dependencies":[{"name":"../constants","loc":{"line":1,"column":27}},{"name":"../../assets/police.png","loc":{"line":2,"column":22}},{"name":"../../assets/sports-car.png","loc":{"line":3,"column":21}}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _constants = require(\"../constants\");\n\nvar constants = _interopRequireWildcard(_constants);\n\nvar _police = require(\"../../assets/police.png\");\n\nvar _police2 = _interopRequireDefault(_police);\n\nvar _sportsCar = require(\"../../assets/sports-car.png\");\n\nvar _sportsCar2 = _interopRequireDefault(_sportsCar);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nconst width = constants.width;\nconst height = constants.height;\n\nconst top = 0.43;\nconst bottom = 0.58;\n\nclass car {\n  constructor(direction) {\n    this.dir = direction;\n\n    this.imgPoliceCar = p5.loadImage(_police2.default);\n    this.imgSportsCar = p5.loadImage(_sportsCar2.default);\n    this.pos = { x: 0, y: height / 2 + 8 };\n    this.carWidth = 60;\n    this.carHeight = 35;\n    if (this.dir == 'left') this.pos.x = width;\n\n    this.carRight = this.pos.x + this.carWidth;\n    this.signalLeft = width / 2 - width * 0.1 - 20;\n    this.signalRight = width / 2 + width * 0.1 + 20;\n  }\n\n  show() {\n    if (this.dir == 'right') {\n      this.pos.y = height / 2 + 8;\n      p5.image(this.imgSportsCar, this.pos.x, this.pos.y, this.carWidth, this.carHeight);\n    } else if (this.dir == 'left') {\n      this.pos.y = height * top + 10;\n      p5.image(this.imgPoliceCar, this.pos.x, this.pos.y, this.carWidth, this.carHeight);\n    }\n  }\n  update() {\n    if (this.dir == 'right') {\n      var carRight = this.pos.x + this.carWidth;\n      if (bridgeCarSignal && carRight > this.signalLeft - 10 && carRight < this.signalLeft + 5) {} else {\n        this.pos.x += 4;\n      }\n\n      if (carRight > width) {\n        this.pos.x = -50;\n      }\n    } else if (this.dir == 'left') {\n      var carLeft = this.pos.x;\n      if (bridgeCarSignal && carLeft < this.signalRight + 10 && carLeft > this.signalRight - 5) {} else {\n        this.pos.x -= 4;\n      }\n\n      if (carLeft < 0) {\n        this.pos.x = width + 50;\n      }\n    }\n  }\n}\nexports.default = car;"},"hash":"3c7d50f6a3c038b295e8ed4480ad47ec"}